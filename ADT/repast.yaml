tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - https://raw.githubusercontent.com/micado-scale/tosca/master/micado_types.yaml
  - https://raw.githubusercontent.com/micado-scale/tosca/master/policy/placement/requirement/connection/tosca_policy_deployment_placement_requirement_connection.yaml
  - https://raw.githubusercontent.com/micado-scale/tosca/master/policy/scalability/performance/completion/tosca_policy_scalability_performance_completion.yaml
  - https://raw.githubusercontent.com/micado-scale/tosca/master/policy/scalability/performance/completion/tosca_policy_scalability_performance_completion_job.yaml

repositories:
  docker_hub: https://hub.docker.com/

topology_template:
  inputs:
    ## Input for Container
    docker_image:
      type: string
      description: Docker image to run
      required: yes
      default: "image_to_use"

    url_simultation_db:
      type: string
      description: list of url for afa component to connect to
      default: "http://url_simulation_db:port/"

    ## Input to define the VM
    host_mem:
      type: scalar-unit.size
      description: host mem capacity
      required: yes
      default: 4 GB
    host_disk:
      type: scalar-unit.size
      description: host disk capacity
      required: yes
      default: 50 GB
    libdrive_id:
      type: string
      description: id of the instance image to launch
      required: yes
      default: "some id"
    host_cpu:
      type: integer
      description: cpu of the host
      required: yes
      default: 2
    ## Input for policies
    estimated_completion_time_one_job:
      type: scalar-unit.time
      description: time for one job to be executed
      required: true
      default: 1 h

    max_estimation_time:
      type: scalar-unit.time
      description: time execution experiment
      required: true
      default: 1 d 2 h
    total_budget:
      type: float
      description: total budget for the experiment
      required: true
      default: 50.0
    cut_off:
      type: float
      description: allowance to go behind total budget
      required: true
      default: 100.0

  node_templates:

    Repast:
      type: tosca.nodes.MiCADO.Container.Application.Docker
      properties:
        command: "URL_MODEL [ BATCH_PARAMS ]"

      artifacts:
        image:
          type: tosca.artifacts.Deployment.Image.Container.Docker
          file:  {get_input: "docker_image"}
          repository: docker_hub

      requirements:
        - host:
            node: VM
            relationship: tosca.relationships.HostedOn


    VM:
      type: tosca.nodes.MiCADO.Occopus.CloudSigma.Compute

      properties:
        cloud:
          interface_cloud: cloudsigma
          endpoint_cloud: https://zrh.cloudsigma.com/api/2.0

      capabilities:
        host:
          properties:
            num_cpus: { get_input: host_cpu }
            disk_size: { get_input: host_disk }
            mem_size: { get_input: host_mem }
            libdrive_id: { get_input: libdrive_id }

  policies:
    - scalability:
        type: tosca.policies.Scaling.Performance.Completion
        targets: [ Repast ]
        properties:
          stage: started
          priority: 100
          trigger_1_id: estimate_completion_time
          trigger_1_namespace: prometheus
          max_estimation_time: { get_input: max_estimation_time }
          estimated_completion_time_one_job: { get_input: estimated_completion_time_one_job }
          total_budget: { get_input: total_budget }
          cut_off_percentage: { get_input: cut_off }
          params:
            url: { get_input: url_simulation_db }
    - connect:
        type: tosca.policies.Placement.Requirement.Connection
        targets: [ Repast ]
        properties:
          stage: created
          properties: 100
          url: { get_input: url_simultation_db }
