tosca_definitions_version: tosca_simple_yaml_1_0

interface_types:
  ##
  ## Virtualmachine-level interface type definitions
  ##
  tosca.interfaces.MiCADO.Occopus:
    derived_from: tosca.interfaces.node.lifecycle.Standard
    description: Interface for VM management with Occopus
    inputs:
      endpoint_cloud:
        type: string
        description: Cloud API endpoint
        required: false
      interface_cloud:
        type: string
        description: Cloud provider
        required: false
        constraints:
          - valid_values: [ 'ec2', 'nova', 'cloudsigma', 'cloudbroker' ]
    create:
      description: Create a compute node with Occopus

  tosca.interfaces.MiCADO.Terraform:
    derived_from: tosca.interfaces.node.lifecycle.Standard
    description: Interface for VM management with Terraform
    inputs:
      provider:
        type: string
        description: Cloud provider
        required: false
    create:
      description: Create a compute node with Terraform

  ##
  ## Container-level interface type definitions
  ##
  tosca.interfaces.MiCADO.Swarm:
    derived_from: tosca.interfaces.node.lifecycle.Standard
    description: Interface for container orchestration with Docker Swarm
    inputs:
      command:
        type: string
        description: arguments to be passed to the entrypoint
        required: false
      deploy:
        type: deploy_type
        description: swarm-specific configuration settings
        required: false
      entrypoint:
        type: string
        desciption: override the default "command"/entrypoint of container
        required: false
      environment:
        type: map
        description: map of all the environment variables required
        required: false
        entry_schema:
          type: string
      expose:
        type: list
        description: ports to expose internally
        required: false
      stop_grace_period:
        type: string
        description: time to wait to stop a container
        required: false
      labels:
        type: map
        description: labels
        required: false
        entry_schema:
          type: string
      logging:
        required: false
        type: map
      networks:
        required: false
        type: list
      volumes:
        required: false
        type: list
      secrets:
        type: list
        required: false
      tty:
        type: boolean
        required: false
    create:
      description: Orchestrate with Swarm

  tosca.interfaces.MiCADO.Kubernetes:
    derived_from: tosca.interfaces.node.lifecycle.Standard
    description: Interface for container orchestration with Kubernetes
    create:
      description: Orchestrate with Kubernetes

node_types:
  ##
  ## Virtualmachine-level node type definitions
  ##
  tosca.nodes.MiCADO.Compute:
    derived_from: tosca.nodes.Compute
    description: Base compute node for MiCADO
    capabilities:
      host:
        type: tosca.capabilities.Compute
      os:
        type: tosca.capabilities.OperatingSystem

  tosca.nodes.MiCADO.CloudSigma.Compute:
    derived_from: tosca.nodes.MiCADO.Compute
    description: CloudSigma compute node
    properties:
      num_cpus:
        type: integer
        required: true
        constraints:
          - greater_or_equal: 250
          - less_or_equal: 100000
      mem_size:
        type: integer
        required: true
        constraints:
          - greater_or_equal: 268435456
          - less_or_equal: 137438953472
      libdrive_id:
        type: string
        required: true
      vnc_password:
        type: string
        required: true
      public_key_id:
        type: string
        required: true
      host_name:
        type: string
        required: false
      nics:
        type: list
        required: true
    interfaces:
      Occopus:
        type: tosca.interfaces.MiCADO.Occopus
      Terraform:
        type: tosca.interfaces.MiCADO.Terraform

  tosca.nodes.MiCADO.EC2.Compute:
    derived_from: tosca.nodes.MiCADO.Compute
    description: Amazon EC2 compute node
    properties:
      region_name:
        type: string
        required: true
      image_id:
        type: string
        required: true
      instance_type:
        type: string
        required: true
      key_name:
        type: string
        required: false
      security_group_ids:
        type: list
        required: false
      subnet_id:
        type: string
        required: false
    interfaces:
      Occopus:
        type: tosca.interfaces.MiCADO.Occopus
      Terraform:
        type: tosca.interfaces.MiCADO.Terraform

  tosca.nodes.MiCADO.CloudBroker.Compute:
    derived_from: tosca.nodes.MiCADO.Compute
    description: CloudBroker compute node
    properties:
      deployment_id:
        type: string
        required: true
      instance_type_id:
        type: string
        required: true
      key_pair_id:
        type: string
        required: false
      opened_port:
        type: string
        required: false
    interfaces:
      Occopus:
        type: tosca.interfaces.MiCADO.Occopus
      Terraform:
        type: tosca.interfaces.MiCADO.Terraform

  tosca.nodes.MiCADO.Nova.Compute:
    derived_from: tosca.nodes.MiCADO.Compute
    description: Nova compute node
    properties:
      image_id:
        type: string
        required: true
      flavor_name:
        type: string
        required: true
      tenant_name:
        type: string
        required: false
      project_id:
        type: string
        required: true
      user_domain_name:
        type: string
        required: false
      network_id:
        type: string
        required: true
      server_name:
        type: string
        required: false
      key_name:
        type: string
        required: false
      security_groups:
        type: list
        required: false
      floating_ip:
        type: string
        required: false
      floating_ip_pool:
        type: string
        required: false
    interfaces:
      Occopus:
        type: tosca.interfaces.MiCADO.Occopus
      Terraform:
        type: tosca.interfaces.MiCADO.Terraform

  ##
  ## Container-level node type definitions
  ##
  tosca.nodes.MiCADO.network.Network.Swarm:
    derived_from: tosca.nodes.network.Network
    description: description of a Docker Swarm network
    properties:
      attachable:
        type: boolean
        description: is attachable
        required: false
      driver:
        type: string
        description: network driver
        required: false
      external:
        type: boolean
        required: false
      driver_opts:
        type: map
        description: network driver options (incl. mtu)
        required: false
      ip_version:
        type: integer
        required: false
        default: null
      dhcp_enabled:
        type: boolean
        required: false
        default: null

  tosca.nodes.MiCADO.Container.Volume:
    derived_from: tosca.nodes.BlockStorage
    description: description of a container volume
    properties:
      name:
        type: string
        description: name of the volume
        required: false
      labels:
        type: map
        description: map of metadata labels
        required: false
      size:
        type: string
        description: overwrite size requirement
        required: false
    capabilities:
      volume:
        type: tosca.capabilities.Attachment
    interfaces:
      Swarm:
        type: tosca.interfaces.MiCADO.Swarm
      Kubernetes:
        type: tosca.interfaces.MiCADO.Kubernetes

  tosca.nodes.MiCADO.Container.Application.Docker:
    derived_from: tosca.nodes.Container.Application.Docker
    description: description of a Docker container
    properties:
      ports:
        type: list
        description: ports to be forwarded
        required: false
      clusterIP:
        type: string
        description: ip (Kubernetes style)
        required: false
      ip:
        type: string
        description: ip (Swarm style)
        required: false
    interfaces:
      Swarm:
        type: tosca.interfaces.MiCADO.Swarm
      Kubernetes:
        type: tosca.interfaces.MiCADO.Kubernetes
    attributes:
      port:
        type: integer
    capabilities:
      service:
        type: tosca.capabilities.Container.Docker
    requirements:
      - service:
          capability: tosca.capabilities.Container.Docker
          node: tosca.nodes.MiCADO.Container.Application.Docker
          relationship: tosca.relationships.MiCADO.ConnectsTo
      - host:
          capability: tosca.capabilities.Compute
          node: tosca.nodes.MiCADO.Compute
          relationship: tosca.relationships.HostedOn
      - volume:
          capability: tosca.capabilities.Attachment
          node: tosca.nodes.MiCADO.Container.Volume
          relationship: tosca.relationships.AttachesTo

  tosca.nodes.MiCADO.network.Network.Docker:
    derived_from: tosca.nodes.network.Network
    description: description of a Docker network
    properties:
      attachable:
        type: boolean
        description: is attachable
        required: false
      driver:
        type: string
        description: network driver
        required: false
      external:
        type: boolean
        required: false
      driver_opts:
        type: map
        description: network driver options (incl. mtu)
        required: false      
      ip_version:
        type: integer
        required: false
        default: null
      dhcp_enabled:
        type: boolean
        required: false
        default: null

relationship_types:

  tosca.relationships.MiCADO.ConnectsTo:
    derived_from: tosca.relationships.ConnectsTo
    properties:
      network:
        type: string
        description: Name of Docker network to connect containers over
        required: true

capability_types:

  ## Defining TOSCA compute capabilities (normative as of V1.1)
  tosca.capabilities.Compute:
    derived_from: tosca.capabilities.Container
    properties:
      name:
        type: string
        required: false
      num_cpus:
        type: integer
        required: false
        constraints:
          - greater_or_equal: 1
      cpu_frequency:
        type: scalar-unit.frequency
        required: false
        constraints:
          - greater_or_equal: 0.1 GHz
      disk_size:
        type: scalar-unit.size
        required: false
        constraints:
          - greater_or_equal: 0 MB
      mem_size:
        type: scalar-unit.size
        required: false
        constraints:
          - greater_or_equal: 0 MB


artifact_types:

    tosca.artifacts.File.Secrets.Docker:
      derived_from: tosca.artifacts.File
      properties:
        name:
          type: string
          required: false
        file:
          type: string
          required: false
        external:
          type: boolean
          required: false

data_types:

  deploy_type:
    properties:
      mode:
        type: string
        required: false
      replicas:
        type: integer
        required: false
      resources:
        type: resource_type
        required: false
      labels:
        type: map
        required: false
      placement:
        type: placement_type
        required: false
      restart_policy:
        type: map
        required: false
      update_config:
        type: map
        required: false

  resource_type:
    properties:
      cpus:
        type: string
        required: false
      memory:
        type: string
        required: false

  placement_type:
    properties:
      constraints:
        required: false
        type: list
      preferences:
        required: false
        type: list

policy_types:

  tosca.policies.Scaling.MiCADO:
    derived_from: tosca.policies.Scaling
    description: base MiCADO policy defining data sources, constants, queries, alerts, limits and rules
    properties:
      sources:
        type: list
        description: list of prometheus exporters as data sources
        required: false
      constants:
        type: map
        description: list of constants referred in other sections
        required: false
      alerts:
        type: list
        description: list of prometheus alerts
        required: false
      queries:
        type: map
        description: list of variables and their associated prometheus query
        required: false
      stage:
        type: string
        description: the stage that will be affected by the policy (not yet implemented)
        default: started
        required: false
      priority:
        type: integer
        description: the priority with which the policy will be exectued (not yet implemented)
        default: 100
        required: false
      min_instances:
        type: integer
        required: true
        description: defines the min instances to scale to
      max_instances:
        type: integer
        required: true
        description: defines the max instances to scale to
      scaling_rule:
        type: string
        description: python code to define scaling rule
        required: true
